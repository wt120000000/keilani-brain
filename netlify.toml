# ===== Netlify Build (Monorepo / Next.js) =====
[build]
  # Build the Next.js app that lives in apps/web
  base    = "apps/web"
  command = "pnpm build"
  publish = ".next"
  edge_functions = "../../netlify/edge-functions"   # edge code lives at repo_root/netlify/edge-functions

[[plugins]]
  package = "@netlify/plugin-nextjs"

# ===== Server Functions (bundling settings) =====
[functions]
  node_bundler = "esbuild"
  included_files = ["packages/server/**"]
  external_node_modules = ["openai", "stripe", "@supabase/supabase-js"]

# ---------- App API routes (Netlify Functions) ----------
# Plain JSON chat (function name: "chat")
[[redirects]]
  from = "/api/chat"
  to   = "/.netlify/functions/chat"
  status = 200

# Health (function name: "health")
[[redirects]]
  from = "/api/health"
  to   = "/.netlify/functions/health"
  status = 200

# ---------- Edge Functions ----------
# Stream chat on the Edge (file name: chat-stream.ts/js in netlify/edge-functions)
[[edge_functions]]
  path     = "/api/chat-stream"
  function = "chat-stream"

# ---------- Static headers ----------
# No-store for HTML
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "no-store, must-revalidate"

# CSS
[[headers]]
  for = "/styles.css"
  [headers.values]
    Content-Type  = "text/css; charset=UTF-8"
    Cache-Control = "public, max-age=0, must-revalidate"

# JS anywhere
[[headers]]
  for = "/*.js"
  [headers.values]
    Content-Type  = "application/javascript; charset=UTF-8"
    Cache-Control = "public, max-age=0, must-revalidate"

[[headers]]
  for = "/js/*.js"
  [headers.values]
    Content-Type  = "application/javascript; charset=UTF-8"
    Cache-Control = "public, max-age=0, must-revalidate"

# ---------- CSP (tight but dev-friendly) ----------
[[headers]]
  for = "/*"
  [headers.values]
    Content-Security-Policy = """
      default-src 'self';
      script-src 'self' https://cdn.jsdelivr.net;
      style-src  'self' 'unsafe-inline';
      img-src    'self' data:;
      font-src   'self' data:;
      connect-src 'self' https://api.keilani.ai https://api.openai.com https://api.elevenlabs.io https://*.supabase.co https://*.stripe.com blob: data:;
      media-src  'self' blob: data:;
      worker-src 'self' blob:;
      frame-ancestors 'self';
      base-uri 'self';
      form-action 'self'
    """
    Access-Control-Allow-Origin = "*"
    Permissions-Policy = "camera=(self), microphone=(self), geolocation=()"
    X-Frame-Options = "SAMEORIGIN"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"

# SSE: donâ€™t transform; keep-alive
[[headers]]
  for = "/api/chat-stream"
  [headers.values]
    Cache-Control = "no-cache, no-transform"
    Connection    = "keep-alive"
    Content-Type  = "text/event-stream; charset=utf-8"

# Legacy script path safety net
[[redirects]]
  from = "/keilaniStream.v20.js"
  to   = "/js/keilaniStream.v20.js"
  status = 200
